<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QB+RXhpZgAATU0AKgAAAAgAAwESAAMAAAABAAEAAAExAAIAAAAw
        AAAAMgEyAAIAAAAUAAAAYgAAAABNaWNyb3NvZnQgV2luZG93cyBQaG90byBWaWV3ZXIgMTAuMC4xMDI0
        MC4xNjM4NAAyMDE3OjA1OjIzIDIzOjQ3OjQ1AP/bAEMAAwICAwICAwMDAwQDAwQFCAUFBAQFCgcHBggM
        CgwMCwoLCw0OEhANDhEOCwsQFhARExQVFRUMDxcYFhQYEhQVFP/bAEMBAwQEBQQFCQUFCRQNCw0UFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFP/AABEIAOQAMgMBIgAC
        EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0B
        AgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVG
        R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
        uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGh
        scEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1
        dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri
        4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP09ooooAKKKKACiiigAooooADxz6dP8/wCelc14
        f+JXhXxSwTSdesbyQnAjWcB/++Tz+ldKfumvjb4D/AXRvit4FvtSu728sNRt9Qe3jmt2G0KI42GVI55c
        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
</value>
  </data>
</root>